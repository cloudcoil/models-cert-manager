{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"cloudcoil.models.cert_manager","text":"<p>Versioned cert_manager models for cloudcoil.</p>"},{"location":"#installation","title":"\ud83d\udd27 Installation","text":"<p>Using uv (recommended):</p> <pre><code># Install with cert-manager support\nuv add cloudcoil.models.cert_manager\n</code></pre> <p>Using pip:</p> <pre><code>pip install cloudcoil.models.cert_manager\n</code></pre>"},{"location":"#examples","title":"\ud83d\udca1 Examples","text":""},{"location":"#using-cert-manager-models","title":"Using cert-manager Models","text":"<pre><code>from cloudcoil import apimachinery\nimport cloudcoil.models.cert_manager.v1 as cm\n\n# Create a Certificate\ncertificate = cm.Certificate(\n    metadata=apimachinery.ObjectMeta(name=\"example-cert\", namespace=\"default\"),\n    spec=cm.CertificateSpec(\n        secret_name=\"example-cert-tls\",\n        issuer_ref=cm.IssuerRef(name=\"example-issuer\"),\n        dns_names=[\"example.com\"]\n    )\n).create()\n\n# List Certificates\nfor cert in cm.Certificate.list(namespace=\"default\"):\n    print(f\"Found certificate: {cert.metadata.name}\")\n\n# Update a Certificate\ncertificate.spec.dns_names.append(\"www.example.com\")\ncertificate.save()\n\n# Delete a Certificate\ncm.Certificate.delete(\"example-cert\", namespace=\"default\")\n</code></pre>"},{"location":"#documentation","title":"\ud83d\udcda Documentation","text":"<p>For complete documentation, visit cloudcoil.github.io/cloudcoil</p>"},{"location":"#license","title":"\ud83d\udcdc License","text":"<p>Apache License, Version 2.0 - see LICENSE</p>"},{"location":"api/","title":"API Reference","text":""}]}